name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ "master" ]

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_NAME: 'MESBlastBlockGenerator'
  SOLUTION_NAME: 'MESBlastBlockGenerator.sln'

jobs:
  # Build the application to verify it compiles correctly
  build:
    runs-on: windows-latest

    steps:
    # Checkout the code from the repository
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    # Restore all NuGet packages and dependencies
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_NAME }}

    # Build the application in Release configuration to verify compilation
    - name: Build application
      run: dotnet build ${{ env.SOLUTION_NAME }} --configuration Release --no-restore

  # Publish Windows artifacts for different architectures
  publish-windows:
    name: Publish Windows Artifacts
    needs: build
    runs-on: windows-latest
    strategy:
      matrix:
        runtime: [win-x64, win-x86]
    steps:
      # Checkout the code again for publishing step
      - name: Checkout
        uses: actions/checkout@v4
        
      # Install .NET Core SDK for publishing
      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Publish self-contained executable for Windows
      # This creates a single executable file that includes .NET runtime
      - name: Publish for Windows
        run: |
          dotnet publish ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj `
            --configuration Release `
            --runtime ${{ matrix.runtime }} `
            --self-contained true `
            -p:PublishSingleFile=true `
            -p:IncludeNativeLibrariesForSelfExtract=true `
            --output ./publish/${{ matrix.runtime }}
          
      # Upload the published artifacts for download
      # Artifacts will be available for 30 days
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-windows-${{ matrix.runtime }}
          path: ./publish/${{ matrix.runtime }}/
          retention-days: 30
